{
  "name": "account-updates-ingestor",
  "version": "0.1.0",
  "description": "Simulation of the casting, ingestion & handling of accounts' update events issued by a blockchain",
  "author": "Jabba Ã¸1",
  "private": true,
  "license": "Apache-2.0",
  "scripts": {
    "build": "nest build",
    "commit": "git cz",
    "commit:pre": "npm run lint && npm run format && npm run test",
    "doc": "typedoc ./src --out ./docs",
    "docker:build": "npm i --package-lock-only true && docker build -f deploy/docker/Dockerfile -t account-ingestor .",
    "docker:build:prod": "docker build -f deploy/docker/Dockerfile.prod -t account-ingestor-prod .",
    "docker:cleanup": "docker container rm -v account-ingestor account-ingestor-prod account-ingestor-sh && docker image rm -f account-ingestor account-ingestor-prod",
    "docker:compose:down": "docker compose down -f deploy/docker/docker-compose.yml -v",
    "docker:compose:up": "docker compose up -f deploy/docker/docker-compose.yml --force-recreate --remove-orphans",
    "docker:run": "docker run -p8080:3000 --name account-ingestor account-ingestor",
    "docker:run:prod": "docker run -p8080:3000 --name account-ingestor-prod --label account-ingestor account-ingestor-prod",
    "docker:sh:run": "docker run -it --name account-ingestor-sh --entrypoint sh account-ingestor",
    "docker:sh": "docker exec -it account-ingestor sh",
    "docker:stack:deploy": "docker stack deploy -c deploy/docker/docker-stack-monitor.yml mon --prune",
    "docker:stack:rm": "docker stack rm mon",
    "docker:start": "docker start account-ingestor",
    "docker:start:prod": "docker start account-ingestor-prod",
    "docker:vol:rm": "docker volume rm -f grafana_data prometheus_data mon_grafana_data mon_prometheus_data",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "prepare": "husky install",
    "reset": "rm -rf ./node_modules ./coverage ./dist ./build ./logs ./docs",
    "start:debug": "nest start --debug --watch",
    "start:dev": "nest start --watch",
    "start:prod": "NODE_ENV=production node dist/main",
    "start": "nest start",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "test:watch": "jest --watch",
    "test": "jest",
    "webpack:build": "webpack --config webpack.prod.js",
    "webpack:start": "node dist/server"
  },
  "dependencies": {
    "@nestjs/axios": "^3.0.0",
    "@nestjs/common": "^10.2.7",
    "@nestjs/config": "^3.1.1",
    "@nestjs/core": "^10.2.7",
    "@nestjs/platform-express": "^10.2.7",
    "@nestjs/serve-static": "^4.0.0",
    "@nestjs/swagger": "^7.1.13",
    "@nestjs/terminus": "^10.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "prom-client": "^14.2.0",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "service": "^0.1.4",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.1.18",
    "@nestjs/schematics": "^10.0.2",
    "@nestjs/testing": "^10.2.7",
    "@types/express": "^4.17.19",
    "@types/jest": "^29.5.5",
    "@types/node": "^20.8.4",
    "@types/supertest": "^2.0.14",
    "@typescript-eslint/eslint-plugin": "^6.7.5",
    "@typescript-eslint/parser": "^6.7.5",
    "eslint": "^8.51.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.1",
    "git-cz": "^4.9.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "prettier": "^3.0.3",
    "run-script-webpack-plugin": "^0.2.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-loader": "^9.5.0",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typedoc": "^0.25.2",
    "typescript": "^5.2.2",
    "webpack": "5.88.2",
    "webpack-cli": "^5.1.4",
    "webpack-node-externals": "^3.0.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "config": {
    "commitizen": {
      "path": "git-cz"
    }
  }
}
