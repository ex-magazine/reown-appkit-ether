version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  front-tier:
  back-tier:

services:
  prometheus:
    image: prom/prometheus:v2.47.0
    volumes:
      - ./monitor/prometheus/:/etc/prometheus/:ro
      - prometheus_data:/prometheus:rw
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
      - 9090:9090
    networks:
      - back-tier
    restart: always

  node-exporter:
    image: prom/node-exporter:v1.6.1
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      # - /:/host:ro,rslave
    command: 
      # - '--path.rootfs=/host'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - back-tier
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    # network_mode: host
    # pid: host
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk:/dev/disk:ro
      - /dev/kmsg:/dev/kmsg
      - /etc/machine-id:/etc/machine-id:ro
    depends_on:
      - prometheus
    ports:
      - 8020:8080
    networks:
      - back-tier
    restart: on-failure
  
  grafana:
    image: grafana/grafana:10.1.2
    container_name: monitoring_grafana
    user: "472"
    depends_on:
      - prometheus
    links:
      - prometheus:prometheus
    volumes:
      - ./monitor/grafana/provisioning/:/etc/grafana/provisioning/:ro
      - grafana_data:/var/lib/grafana:rw
    env_file:
      - ./monitor/grafana/config.monitoring
    ports:
      - '3000:3000'
    networks:
      - back-tier
      - front-tier
    restart: unless-stopped

  ingestor:
    build:
      context: .
    container_name: account-ingestor
    image: account-ingestor
    ports:
      - '8090:3000'
    networks:
      - back-tier
      - front-tier
    restart: unless-stopped
